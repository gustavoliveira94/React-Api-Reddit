{"version":3,"sources":["components/Header.js","components/Hot.js","components/News.js","components/Rising.js","components/NotFound.js","components/BoxContent.js","components/Options.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Hot","state","hot","limit","changeLimit","_this","setState","fetch","response","ok","Error","statusText","json","data","this","children","map","console","log","_context","t0","slice","href","url","target","key","id","alt","title","src","thumbnail","width","height","author","domain","react","length","onClick","News","news","Rising","rising","NotFound","BoxContent","Switch","Route","exact","path","component","Redirect","from","to","Options","Link","props","changeHot","style","background","colorHot","changeNews","colorNews","changeRising","colorRising","Content","components_Options","components_BoxContent","App","components_Header","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60e5a419.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>REACT<label>JS</label></h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Hot extends Component {\r\n\r\n    state = {\r\n        hot: [],\r\n        limit: 10\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('https://www.reddit.com/r/reactjs/hot.json');\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            this.setState({ hot: data.data.children.map(data => data.data) });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: this.state.limit + 10\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.hot.slice(0, 5))\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.hot.slice(0, this.state.limit).map((hot) => {\r\n                        return (\r\n                            <a className=\"item\" href={hot.url} target=\"window.open();\" key={hot.id}>\r\n                                <div className=\"box\">\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={hot.title} src={hot.thumbnail === 'self' || hot.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : hot.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{hot.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{hot.author}</span></p>\r\n                                        <label>{hot.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                    {\r\n                        this.state.hot.length <= 0\r\n                            ? 'Nenhuma resultado encontrado!' : ''\r\n                    }\r\n                    {\r\n\r\n                        this.state.limit < this.state.hot.length\r\n                            ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : ''\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hot;","import React, { Component, Fragment } from 'react';\r\n\r\nclass News extends Component {\r\n\r\n    state = {\r\n        news: [],\r\n        limit: 10\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('https://www.reddit.com/r/reactjs/new.json');\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            this.setState({ news: data.data.children.map(data => data.data) });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: 100000\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.news.slice(0, this.state.limit).map((news) => {\r\n                        return (\r\n                            <a className=\"item\" key={news.id} href={news.url} target=\"window.open();\">\r\n                                <div className=\"box\" key={news.id}>\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={news.title} src={news.thumbnail === 'self' || news.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : news.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{news.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{news.author}</span></p>\r\n                                        <label>{news.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                {\r\n                        this.state.news.length <= 0\r\n                            ? 'Nenhuma resultado encontrado!' : ''\r\n                    }\r\n                    {\r\n\r\n                        this.state.limit < this.state.news.length\r\n                            ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : ''\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React, { Component, Fragment } from 'react';\r\n\r\nclass Rising extends Component {\r\n\r\n    state = {\r\n        rising: [],\r\n        limit: 10\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('https://www.reddit.com/r/reactjs/rising.json');\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            const data = await response.json();\r\n            this.setState({ rising: data.data.children.map(data => data.data) });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: 100000\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.rising.slice(0, this.state.limit).map((rising) => {\r\n                        return (\r\n                            <a className=\"item\" key={rising.id} href={rising.url} target=\"window.open();\">\r\n                                <div className=\"box\" key={rising.id}>\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={rising.title} src={rising.thumbnail === 'self' || rising.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : rising.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{rising.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{rising.author}</span></p>\r\n                                        <label>{rising.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                    {\r\n                        this.state.rising.length <= 0\r\n                            ? 'Nenhuma resultado encontrado!' : ''\r\n                    }\r\n                    {\r\n\r\n                        this.state.limit < this.state.rising.length\r\n                            ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : ''\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rising;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>Página não encontrada!</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport Hot from './Hot'\r\nimport News from './News'\r\nimport Rising from './Rising'\r\nimport NotFound from './NotFound'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nclass BoxContent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/react-api-reddit/\" component={Hot} />\r\n                    <Route exact path=\"/react-api-reddit/hot\" component={Hot} />\r\n                    <Route exact path=\"/react-api-reddit/news\" component={News} />\r\n                    <Route exact path=\"/react-api-reddit/rising\" component={Rising} />\r\n                    <Route path=\"/react-api-reddit/404\" component={NotFound} />\r\n                    <Redirect from='*' to='/react-api-reddit/404' />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoxContent;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Options extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-options\">\r\n                <Link to=\"/react-api-reddit/hot\" onClick={this.props.changeHot} style={{ background: this.props.colorHot }}>HOT</Link>\r\n                <Link to=\"/react-api-reddit/news\" onClick={this.props.changeNews} style={{ background: this.props.colorNews }}>NEWS</Link>\r\n                <Link to=\"/react-api-reddit/rising\" onClick={this.props.changeRising} style={{ background: this.props.colorRising }}>RISING</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;\r\n","import React, { Component } from 'react';\r\nimport BoxContent from './BoxContent';\r\nimport Options from './Options';\r\n\r\nclass Content extends Component {\r\n\r\n    state = {\r\n        hot: true,\r\n        news: false,\r\n        rising: false,\r\n        colorHot: '#ff7b00',\r\n        colorNews: '',\r\n        colorRising: ''\r\n    }\r\n\r\n    changeHot = () => {\r\n        this.setState({\r\n            hot: true,\r\n            news: false,\r\n            rising: false,\r\n            colorHot: '#ff7b00',\r\n            colorNews: '#282c34',\r\n            colorRising: '#282c34'\r\n        })\r\n    }\r\n\r\n    changeNews = () => {\r\n        this.setState({\r\n            news: true,\r\n            hot: false,\r\n            rising: false,\r\n            colorNews: '#ff7b00',\r\n            colorHot: '#282c34',\r\n            colorRising: '#282c34'\r\n        })\r\n    }\r\n\r\n    changeRising = () => {\r\n        this.setState({\r\n            rising: true,\r\n            hot: false,\r\n            news: false,\r\n            colorRising: '#ff7b00',\r\n            colorHot: '#282c34',\r\n            colorNews: '#282c34'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-content\">\r\n                <Options\r\n                    changeHot={this.changeHot}\r\n                    colorHot={this.state.colorHot}\r\n                    changeNews={this.changeNews}\r\n                    colorNews={this.state.colorNews}\r\n                    changeRising={this.changeRising}\r\n                    colorRising={this.state.colorRising}\r\n                />\r\n                <BoxContent\r\n                    hot={this.state.hot}\r\n                    news={this.state.news}\r\n                    rising={this.state.rising}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport Content from './components/Content'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}