{"version":3,"sources":["components/Header.js","components/Hot.js","components/News.js","components/Rising.js","components/BoxContent.js","components/Options.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Hot","state","hot","limit","changeLimit","_this","setState","_this2","this","url","console","log","fetch","then","res","json","data","children","map","catch","error","slice","href","target","key","id","alt","title","src","thumbnail","width","height","author","domain","react","length","onClick","News","news","Rising","rising","BoxContent","props","components_Hot","components_News","components_Rising","Options","changeHot","style","background","colorHot","changeNews","colorNews","changeRising","colorRising","Content","request","components_Options","components_BoxContent","App","components_Header","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.227b1aa1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>REACT<label>JS</label></h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass Hot extends Component {\r\n\r\n    state = {\r\n        hot: [],\r\n        limit: 10\r\n    }\r\n\r\n    componentWillMount() {\r\n        const url = 'https://www.reddit.com/r/reactjs/hot.json';\r\n        console.log(url)\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.data.children)\r\n                this.setState({ hot: data.data.children.map(data => data.data) });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Não foi possível carregar a api.\", error)\r\n            })\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: 100000\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.hot.slice(0, 5))\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.hot.slice(0, this.state.limit).map((hot) => {\r\n                        return (\r\n                            <a className=\"item\" href={hot.url} target=\"window.open();\" key={hot.id}>\r\n                                <div className=\"box\">\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={hot.title} src={hot.thumbnail === 'self' || hot.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : hot.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{hot.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{hot.author}</span></p>\r\n                                        <label>{hot.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                    {\r\n                        this.state.hot.length > 10 &&\r\n                        <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button>\r\n                        ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : 'Nenhuma resultado encontrado!'\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Hot;","import React, { Component, Fragment } from 'react';\r\n\r\nclass News extends Component {\r\n\r\n    state = {\r\n        news: [],\r\n        limit: 10\r\n    }\r\n\r\n    componentWillMount() {\r\n        const url = 'https://www.reddit.com/r/reactjs/new.json';\r\n        console.log(url)\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.data.children)\r\n                this.setState({ news: data.data.children.map(data => data.data) });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Não foi possível carregar a api.\", error)\r\n            })\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: 100000\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.news.slice(0, this.state.limit).map((news) => {\r\n                        return (\r\n                            <a className=\"item\" key={news.id} href={news.url} target=\"window.open();\">\r\n                                <div className=\"box\" key={news.id}>\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={news.title} src={news.thumbnail === 'self' || news.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : news.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{news.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{news.author}</span></p>\r\n                                        <label>{news.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                    {\r\n                        this.state.news.length > 10 &&\r\n                        <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button>\r\n                        ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : 'Nenhuma resultado encontrado!'\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default News;","import React, { Component, Fragment } from 'react';\r\n\r\nclass Rising extends Component {\r\n\r\n    state = {\r\n        rising: [],\r\n        limit: 10\r\n    }\r\n\r\n    componentWillMount() {\r\n        const url = 'https://www.reddit.com/r/reactjs/rising.json';\r\n        console.log(url)\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.data.children)\r\n                this.setState({ rising: data.data.children.map(data => data.data) });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Não foi possível carregar a api.\", error)\r\n            })\r\n    }\r\n\r\n    changeLimit = () => {\r\n        this.setState({\r\n            limit: 100000\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.rising.slice(0, this.state.limit).map((rising) => {\r\n                        return (\r\n                            <a className=\"item\" key={rising.id} href={rising.url} target=\"window.open();\">\r\n                                <div className=\"box\" key={rising.id}>\r\n                                    <div className=\"thumb\">\r\n                                        <img alt={rising.title} src={rising.thumbnail === 'self' || rising.thumbnail === 'default' ? 'https://ugross.gallerycdn.vsassets.io/extensions/ugross/vscode-react-snippets/1.3.0/1519481679046/Microsoft.VisualStudio.Services.Icons.Default' : rising.thumbnail} width=\"100px\" height=\"100px\" />\r\n                                    </div>\r\n                                    <div className=\"infos\">\r\n                                        <h3>{rising.title}</h3>\r\n                                        <p>Enviado <b>por</b><span>{rising.author}</span></p>\r\n                                        <label>{rising.domain}</label>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n                <Fragment>\r\n                    {\r\n                        this.state.rising.length > 10 &&\r\n                        <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button>\r\n                        ? <button className=\"ver-mais\" onClick={this.changeLimit}>+ Ver mais</button> : 'Nenhuma resultado encontrado!'\r\n                    }\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rising;","import React, { Component } from 'react';\r\nimport Hot from './Hot'\r\nimport News from './News'\r\nimport Rising from './Rising'\r\n\r\nclass BoxContent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.hot === true &&\r\n                    <Hot />\r\n                }\r\n                {this.props.news === true &&\r\n                    <News />\r\n                }\r\n                {this.props.rising === true &&\r\n                    <Rising />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoxContent;","import React, { Component } from 'react';\r\n\r\nclass Options extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-options\">\r\n                <button onClick={this.props.changeHot} style={{ background: this.props.colorHot }}>HOT</button>\r\n                <button onClick={this.props.changeNews} style={{ background: this.props.colorNews }}>NEWS</button>\r\n                <button onClick={this.props.changeRising} style={{ background: this.props.colorRising }}>RISING</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;\r\n","import React, { Component } from 'react';\r\nimport BoxContent from './BoxContent';\r\nimport Options from './Options';\r\n\r\nclass Content extends Component {\r\n\r\n    state = {\r\n        hot: true,\r\n        news: false,\r\n        rising: false,\r\n        colorHot: '#ff7b00',\r\n        colorNews: '',\r\n        colorRising: '',\r\n        request: ''\r\n    }\r\n\r\n    changeHot = () => {\r\n        this.setState({\r\n            hot: true,\r\n            news: false,\r\n            rising: false,\r\n            colorHot: '#ff7b00',\r\n            colorNews: '#282c34',\r\n            colorRising: '#282c34'\r\n        })\r\n    }\r\n\r\n    changeNews = () => {\r\n        this.setState({\r\n            news: true,\r\n            hot: false,\r\n            rising: false,\r\n            colorNews: '#ff7b00',\r\n            colorHot: '#282c34',\r\n            colorRising: '#282c34'\r\n        })\r\n    }\r\n\r\n    changeRising = () => {\r\n        this.setState({\r\n            rising: true,\r\n            hot: false,\r\n            news: false,\r\n            colorRising: '#ff7b00',\r\n            colorHot: '#282c34',\r\n            colorNews: '#282c34'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-content\">\r\n                <Options\r\n                    changeHot={this.changeHot}\r\n                    colorHot={this.state.colorHot}\r\n                    changeNews={this.changeNews}\r\n                    colorNews={this.state.colorNews}\r\n                    changeRising={this.changeRising}\r\n                    colorRising={this.state.colorRising}\r\n                />\r\n                <BoxContent\r\n                    hot={this.state.hot}\r\n                    news={this.state.news}\r\n                    rising={this.state.rising}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Content from './components/Content'\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}